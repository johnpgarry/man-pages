.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" May be distributed under the GNU General Public License
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sun Jul 25 10:53:39 1993 by Rik Faith (faith@cs.unc.edu)
.TH STRTOL 3  "March 29, 1993" "GNU" "Linux Programmer's Manual"
.SH NAME
strtol \- convert a string to a long integer.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "long int strtol(const char *" nptr ", char **" endptr ", int " base );
.fi
.SH DESCRIPTION
The \fBstrtol()\fP function converts the string in \fInptr\fP to a
long integer value according to the given \fIbase\fP, which must be
between 2 and 36 inclusive, or be the special value 0.
.PP
The string must begin with an arbitrary amount of white space (as
determined by
.BR isspace (3))
followed by a single optional `+' or `-'
sign.  If \fIbase\fP is zero or 16, the string may then include a 
`0x' prefix, and the number will be read in base 16; otherwise, a 
zero \fIbase\fP is taken as 10 (decimal) unless the next character
is `0', in which case it is taken as 8 (octal).
.PP
The remainder of the string is converted to a long int value in the
obvious manner, stopping at the first character which is not a valid
digit in the given base.  (In bases above 10, the letter `A' in
either upper or lower case represents 10, `B' represents 11, and so
forth, with `Z' representing 35.)
.PP
If \fIendptr\fP is not NULL, \fBstrtol()\fP stores the address of the
first invalid character in \fI*endptr\fP.  If there were no digits at
all, \fBstrtol()\fP stores the original value of \fInptr\fP in
\fI*endptr\fP.  (Thus, if \fI*nptr\fP is not `\\0' but \fI**endptr\fP
is `\\0' on return, the entire string is invalid.)
.SH "RETURN VALUE"
The \fBstrtol()\fP function returns the result of the conversion,
unless the value would underflow or overflow.  If an underflow occurs,
\fBstrtol()\fP returns LONG_MIN.  If an overflow occurs, \fBstrtol()\fP
returns LONG_MAX.  In both cases, \fIerrno\fP is set to ERANGE.
.SH "ERRORS"
.TP
.B ERANGE
The given string was out of range; the value converted has been clamped.
.SH "CONFORMING TO"
SVID 3, BSD 4.3, ISO 9899
.SH SEE ALSO
.BR atof "(3), " atoi "(3), " atol "(3), " strtod "(3), " strtoul (3)
.SH BUGS
Ignores the current locale.
