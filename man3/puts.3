.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" This file can be distributed under the terms of the GNU General Public
.\" License.
.\" Modified Sat Jul 24 18:42:59 1993 by Rik Faith (faith@cs.unc.edu)
.TH PUTS 3  "April 4, 1993" "GNU" "Linux Programmer's Manual"
.SH NAME
fputc, fputs, putc, putchar, puts \- output of characters and strings
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.sp
.BI "int fputc(int " c ", FILE *" stream ");"
.nl
.BI "char *fputs(const char *" "s" ", FILE *" "stream" ");"
.nl
.BI "int putc(int " c ", FILE *" stream ");"
.nl
.BI "int putchar(int " c ");"
.nl
.BI "int puts(char *" "s" ");"
.nl
.BI "int ungetc(int " c ", FILE *" stream ");"
.SH DESCRIPTION
.B fputc()
writes the character
.IR c ,
cast to an
.BR "unsigned char" ,
to
.IR stream .
.PP
.B fputs()
writes the string
.I s
to
.IR stream ,
without its trailing
.BR '\e0' .
.PP
.B putc()
is equivalent to
.B fputc()
except that it may be implemented as a macro which evaluates
.I stream
more than once.
.PP
.BI "putchar(" c );
is equivalent to
.BI "putc(" c , stdout ).
.PP
.BR puts() 
writes the string
.I s
and a trailing newline
to
.IR stdout .
.PP
Calls to the functions described here can be mixed with each other and with
calls to other output functions from the
.B stdio
library for the same output stream.
.SH "RETURN VALUES"
.BR fputc() , " putc() " and " putchar()"
return the character written as an
.B unsigned char
cast to an
.B int
or
.B EOF
on error.
.PP
.BR puts() " and " fputs()
return a non - negative number
on success, or
.B EOF
on error.
.PP
.SH "CONFORMS TO"
ANSI - C, POSIX.1
.SH "BUGS"
It is not advisable to mix calls to output functions from the
.B stdio
library with low - level calls to
.B write() 
for the file descriptor associated with the same output stream; the results
will be undefined and very probably not what you want.
.SH SEE ALSO
.BR write "(2), " fopen "(3), " fwrite "(3), " scanf (3),
.BR gets "(3), " fseek "(3), " ferror (3)
