.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Mon Mar 29 22:48:44 1993, David Metcalfe
.\" Modified Wed Apr 28 01:35:00 1993, Lars Wirzenius
.\" Modified Sat Jul 24 18:39:41 1993, Rik Faith (faith@cs.unc.edu0
.TH RAND 3  "March 29, 1993" "GNU" "Linux Programmer's Manual"
.SH NAME
rand, srand \- random number generator.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.B int rand(void);
.sp
.BI "void srand(unsigned int " seed );
.fi
.SH DESCRIPTION
The \fBrand()\fP function returns a pseudo-random integer between 0
and RAND_MAX.
.PP
The \fBsrand()\fP function sets its argument as the seed for a new
sequence of pseudo-random integers to be returned by \fBrand()\fP.
These sequences are repeatable by calling \fBsrand()\fP with the same
seed value.
.PP
If no seed value is provided, the \fBrand()\fP function is automatically 
seeded with a value of 1.
.SH "RETURN VALUE"
The \fBrand()\fP function returns a value between 0 and RAND_MAX.
The \fBsrand()\fP returns no value.
.SH NOTES
The versions of \fBrand()\fP and \fBsrand()\fP in the Linux C Library 
use the same random number generator as \fBrandom()\fP and \fBsrandom()\fP.
.PP
To ensure a good distribution for a subrange of values, use code like
the below:
.br
.ti +5
i = RAND_MAX / my_range
.br
.ti +5
i *= my_range
.br
.ti +5
while ((j = rand()) >= i) continue;
.br
.ti +5
return j % i;
.br
(code example based on code from Karl Lehenbauer's fortune cookie
program, which credits Ken Arnold, Unix Review, October 1987).
.SH "CONFORMING TO"
SVID 3, BSD 4.3, ISO 9899
.SH "SEE ALSO"
.BR random "(3), " srandom "(3), " initstate "(3), " setstate (3)
