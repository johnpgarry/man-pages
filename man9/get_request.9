.\"
.\" Copyright (c) 1995 Jochen Karrer
.\"                     <cip307@cip.physik.uni-wuerzburg.de>
.\"                     <http://cip.physik.uni-wuerzburg.de/~cip307>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.TH GET_REQUEST 9 "OCTOBER 1995" "Linux 1.2.13" "Kernel Reference Guide"
.SH NAME
get_request, __get_request, get_request_wait
\- Get a pointer to a currently unused request_struct for filling in a 
request to a block device. 

.SH SYNOPSIS
.nf  

.B #include <linux/blkdev.h>

.B static inline struct request * get_request(int n, int dev);
.B static struct request * __get_request_wait(int n, int dev);
.B static inline struct request * get_request_wait(int n, int dev);

.fi
.SH DESCRIPTION
The requests to block devices are stored in all_requests[], a static array 
of request structs.
The number of available requests
"NR_REQUESTS"
is fixed to 64 in /drivers/block/blk.h. 
.RS
.RE

.B get_request()
.RS
.RI "searches in the first " "n" " entries of all_requests[] for 
an unused request.  The last third of requests is reserved for reads, so
get_request is called with NR_REQUESTS*2/3 for writes from
make_request() in ll_rw_block.c.
If a request is available it will be marked as used by filling in the device
.RI "number " "dev" ", in Kernel 1.3.28 or newer by setting the " "rq_status"
.RI "to " "RQ_ACTIVE" "." 
A pointer to the request will be returned. If no
request is available NULL will be returned. get_request() has to be called with
interrupts disabled. 
.RE

.B __get_request_wait()
.RS
is the same as get_request, but will sleep uninterruptible if no requests are
available. If processing of requests is prevented by a dummy request, 
for gathering requests before processing, get_request_wait() 
will call unplug_device() to
remove the dummy request and start the requests. 
.RE

.B get_request_wait()
.RS
calls get_request, and if no request is available __get_request_wait 
will be called.  This is a little faster than calling __get_request_wait 
directly, if an request is available.
.RE

.SH SOURCES
linux/drivers/block/ll_rw_block.c

.SH BUGS/LIMITATIONS
get request is neither reenetrant nor preemptive.

.SH AUTHOR
Linus Torvalds

.SH SEE ALSO
request(9), make_request(9), add_request(9), plug_device(9)
