.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\" You may distribute it under the terms of the GNU General
.\" Public Licence. It comes with NO WARRANTY.
.\"
.\" Modified Sat Jul 24 00:35:52 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.TH RENAME 2 "24 July 1993" "Linux 0.99.7" "Linux Programmer's Manual"
.SH NAME
rename \- change the name or location of a file
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int rename(const char *" oldpath ", const char *" newpath );
.SH DESCRIPTION
.B rename
renames a file, moving it between directories if required.

Any other hard links to the file (as created using
.BR link )
are unaffected.

If
.I newpath
already exists it will be overwritten; if
.I newpath
exists but the operation fails for some reason or the system crashes
.B rename
guarantees to leave an instance of
.I newpath
in place.

If
.I oldpath
refers to a symbolic link the link is renamed.
.SH "RETURN VALUE"
On success, zero is returned.  On error, -1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP 0.8i
.B EISDIR
.I newpath
is an existing directory, but
.I oldpath
is not a directory.
.TP
.B EXDEV
.IR oldpath " and " newpath
are not on the same filesystem.
.TP
.B ENOTEMPTY
.IR newpath
is a non-empty directory.
.TP
.B EBUSY
.I newpath
exists and is the current working directory or root directory of some
process.
.TP
.B EINVAL
An attempt was made to make a directory a subdirectory of itself.
.TP
.B EMLINK
.I oldpath
already has the maximum number of links to it, or
it was a directory and the directory containing
.I newpath
has the maximum number of links.
.TP
.B ENOTDIR
A component used as a directory in
.IR oldpath " or " newpath
is not, in fact, a directory.
.TP
.B EFAULT
.IR oldpath " or " newpath " points outside your accessible address space."
.TP
.B EACCES
Write access to the directory containing
.IR oldpath " or " newpath
is not allowed for the process's effective uid, or one of the
directories in
.IR oldpath " or " newpath
did not allow search (execute) permission, or
.I oldpath
was a directory and did not allow write permission (needed to update
the
.B ..
entry).
.TP
.B EPERM
The directory containing
.I oldpath
has the sticky bit set and the process's effective uid is neither the
uid of the file to be deleted nor that of the directory containing it,
or the filesystem containing
.IR pathname
does not support renaming of the type requested.
.TP
.B ENAMETOOLONG
.IR oldpath " or " newpath " was too long."
.TP
.B ENOENT
A directory component in
.I oldpath " or " newpath
does not exist or is a dangling symbolic link.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B EROFS
The file is on a read-only filesystem.
.TP
.B ELOOP
.IR oldpath " or " newpath
contains a reference to a circular symbolic link, ie a symbolic link
whose expansion contains a reference to itself.
.TP
.B ENOSPC
The device containing the file has no room for the new directory
entry.
.SH CONFORMING TO
POSIX, BSD 4.3, ANSI C
.SH BUGS
Currently (Linux 0.99pl7) most of the filesystems except Minix will
not allow any overwriting
.BR rename s
involving directories. You get
.BR EEXIST
if you try.

See
.BR open (2)
re multiple files with the same name, and NFS; see
.BR unlink (2)
re NFS.
.SH SEE ALSO
.BR link "(2), " unlink "(2), " symlink "(2), " mv "(1), " link (8).
