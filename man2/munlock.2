.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" 1995-11-26  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"      First version written
.\"
.TH MUNLOCK 2 "1995-11-26" "Linux 1.3.43" "Linux Programmer's Manual"
.SH NAME
munlock \- reenable paging for some parts of memory
.SH SYNOPSIS
.nf
.B #include <sys/mman.h>
.sp
\fBint munlock(const void *\fIaddr\fB, size_t \fIlen\fB);
.fi
.SH DESCRIPTION
.B munlock
reenables paging for the memory in the range starting at
.I addr
with length
.I len
bytes. All pages which contain a part of the specified memory range
can after calling
.B munlock
be moved to external swap space again by the kernel.

Memory locks do not stack, i.e., pages which have been locked several times
by calls to
.B mlock
or
.B mlockall
will be unlocked by a single call to
.B munlock
for the corresponding range or by
.BR munlockall .
Pages which are mapped to several locations or by several processes stay
locked into RAM as long as they are locked at least at one location or by
at least one process.

On POSIX systems on which
.B mlock
and
.B munlock
are available,
.B _POSIX_MEMLOCK_RANGE
is defined in <unistd.h> and the value
.B PAGESIZE
from <limits.h> indicates the number of bytes per page.
.SH RETURN VALUE
On success,
.B munlock
returns zero.  On error, \-1 is returned,
.I errno
is set appropriately, and no changes are made to any locks in the
address space of the process.
.SH ERRORS
.TP 0.8i
.B ENOMEM
Some of the specified address range does not correspond to mapped
pages in the address space of the process.
.TP
.B EINVAL
.I len
was not a positive number.
.SH STANDARDS
POSIX.1b, SVR4
.SH SEE ALSO
.BR mlock(2) ,
.BR mlockall(2) ,
and
.BR munlockall(2) .
