.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Sat Jul 24 11:47:53 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.TH SWAPON 2 "24 July 1993" "Linux 0.99.11" "Linux Programmer's Manual"
.SH NAME
swapon, swapoff \- start/stop swapping to file/device
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int swapon(const char *" path );
.br
.BI "int swapoff(const char *" path );
.SH DESCRIPTION
.B swapon
sets the swap area to the file or block device specified by
.IR path .

.B swapoff
stops swapping to the file or block device specified by
.IR path .

These functions may only be used by the super-user.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
Many other errors can occur if
.I path
is not valid.

.TP 0.8i
.B EPERM
The user is not the super-user, or more than
.B MAX_SWAPFILES
(defined to be 8 in Linux 0.99.11) are in use.
.TP
.B EINVAL
is returned if 
.I path 
exists, but is neither a regular path nor a block device.
.TP
.B ENOENT
is returned if 
.I path 
does not exist.
.TP
.B ENOMEM 
is returned if there is insufficient memory to start swapping.
.SH "CONFORMING TO"
These functions are Linux specific.
.SH NOTES
The partition or path must be prepared with
.BR mkswap (8).
.SH "SEE ALSO"
.BR mkswap "(8), " swapon "(8), " swapoff (8)
