.\" Copyright (C) 2003 Free Software Foundation, Inc.
.\" This file is distributed according to the GNU General Public License.
.\" See the file COPYING in the top level source directory for details.
.\"
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "READAHEAD" 2 "2003-02-21" "Linux 2.4" "Linux Programmer's Manual"
.SH NAME
readahead \- Read in advance one or more pages of a file within a page cache
.SH "SYNOPSIS"
.ad l
.hy 0

#include <unistd.h>
.sp
.HP 23
ssize_t\ \fBsys_readahead\fR\ (int\ \fIfd\fR, loff_t\ \fIoffset\fR, size_t\ \fIcount\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
\fBreadahead\fR reads \fIcount\fR pages in the page cache. 
If a page is not in the page cache, it is added to the page cache.

.PP
\fIfd\fR is the file descriptor of the file being read. 
\fIoffset\fR is the location within the file to start reading. 
A page in the page cache is identified by a file's inode and by the 
offset within the file. 
\fIfd\fR and \fIoffset\fR are used to identify the page in the page cache.

.PP
The offset is incremented by one to read the next page until 
\fIcount\fR pages are read. 
If \fIcount\fR pages is larger than the size of the file, then only up 
to the size of the file is read.

.SH "RETURN VALUE"

.PP
\fBreadahead\fR returns 0 on success; otherwise, it returns the error 
listed in the "Errors" section. 
If the offset specified is greater than the size of the file, then 
nothing is read and 0 is returned.

.SH "ERRORS"

.TP
EBADF
\fBreadahead\fR was not able to get the file.

.SH AUTHOR
Joy Latten.
