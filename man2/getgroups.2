.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.TH GETGROUPS 2 "23 July 1993" "Linux 0.99.11" "Linux Programmer's Manual"
.SH NAME
getgroups, setgroups \- get/set group access list
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int getgroups(int " size ", gid_t " list []);
.sp 2
.B #define __USE_BSD
.br
.B #include <grp.h>
.sp
.BI "int setgroups(size_t " size ", const gid_t *" list );
.SH DESCRIPTION
.TP
.B getgroups
Up to
.I size
supplemental groups are returned in
.IR list .
If
.I size
is zero,
.I list
is not modified, but the total number of supplemental groups for the
process is returned.
.TP
.B setgroups
Sets the supplemental groups for the process.  Only the super-user may use
this function.
.SH "RETURN VALUE"
.TP
.B getgroups
On success, the number of groups stored in
.I list
is returned (if
.I size
is zero, however, the number of supplemental group IDs associated with the
process is returned).  On error, \-1 is returned, and
.I errno
is set appropriately.
.TP
.B setgroups
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EFAULT
.I list
has an invalid address.
.TP
.B EPERM
For
.BR setgroups ,
the user is not the super-user.
.TP
.B EINVAL
For
.BR setgroups ,
.I gidsetsize
is greater than
.B NGROUPS
(32 for Linux 0.99.11).
.SH "CONFORMING TO"
.B getgroups
conforms to POSIX.1 (and is present in BSD 4.3).  Since
.B setgroups
requires privilege, it is not covered under POSIX.1.
.SH BUGS
The
.B __USE_BSD
flag probably shouldn't be required for
.BR setgroups .
.SH "SEE ALSO"
.BR initgroups "(3), "
