.\" Copyright (c) 1993 Luigi P. Bai (lpb@softint.com) July 28, 1993
.\" May be distributed under the GNU General Public License.
.\" Modified Wed Jul 28 11:03:24 1993, Rik Faith (faith@cs.unc.edu)
.TH SHMCTL 2 "July 28, 1993" "Linux 0.99.11" "Linux Programmer's Manual"
.SH NAME
shmctl \- shared memory control
.SH SYNOPSIS
.ad l
.B #include <sys/ipc.h>
.sp
.B #include <sys/shm.h>
.sp
.BI "int shmctl(int " shmid ", int " cmd ", struct shmid_ds *" buf );
.ad b
.SH DESCRIPTION
\fBshmctl()\fP
allows the user to receive information on a shared memory segment,
set the owner, group, and permissions of a shared memory segment,
or destroy a segment. The information about the segment identified by
\fIshmid\fP is returned in a \fIshmid_ds\fP
structure:
.PP
.in +0.5i
.nf
struct shmid_ds {
	struct	ipc_perm shm_perm;	/* operation perms */
	int	shm_segsz;		/* size of segment (bytes) */
	time_t	shm_atime;		/* last attach time */
	time_t	shm_dtime;		/* last detach time */
	time_t	shm_ctime;		/* last change time */
	unsigned short	shm_cpid;	/* pid of creator */
	unsigned short	shm_lpid;	/* pid of last operator */
	short	shm_nattch;		/* no. of current attaches */
	/* the following are private */
	unsigned short   shm_npages;  /* size of segment (pages) */
	unsigned long   *shm_pages;   
	struct shm_desc *attaches;    /* descriptors for attaches */
};
.fi
.in -0.5i
.PP
The fields in the member \fIshm_perm\fP can be set:
.PP
.in +0.5i
.nf
struct ipc_perm
{
  key_t  key;
  \fBushort uid\fP;   /* \fBowner\fP euid and egid */
  \fBushort gid\fP;
  ushort cuid;  /* creator euid and egid */
  ushort cgid;
  \fBushort mode\fP;  /* lower 9 bits of access modes */
  ushort seq;   /* sequence number */
};
.fi
.PP
The following \fIcmds\fP are available:
.br
.TP 0.8i
.B IPC_STAT
is used to copy the information about the shared memory segment into
the buffer \fIbuf\fP. The user must have \fBread\fP access to the 
shared memory segment.
.TP
.B IPC_SET
is used to apply the changes the user has made to the
\fIuid\fP, \fIgid\fP, or \fImode\fP members of the \fIshm_perms\fP field.
The user must be the owner, creator, or the super-user.
.TP
.B IPC_RMID
is used to mark the segment as destroyed. It will actually be destroyed
after the last detach.
The user must be the owner, creator, or the super-user.
.PP
The user \fImust\fP ensure that a segment is eventually destroyed; otherwise
its pages that were faulted in will remain in memory or swap.
.PP
In addition, the \fBsuper-user\fP can prevent or allow swapping of a shared
memory segment with the following \fIcmds\fP: (Linux only)
.br
.TP 0.8i
.B SHM_LOCK
prevents swapping of a shared memory segment. The user must fault in
any pages that are required to be present after locking is enabled.
.TP
.B SHM_UNLOCK
allows the shared memory segment to be swapped out.
.PP
.SH SYSTEM CALLS
.TP
.B fork()
After a
.B fork()
the child inherits the attached shared memory segments.
.TP
.B exec()
After an
.B exec()
all attached shared memory segments are detached (not destroyed).
.TP
.B exit()
Upon
.B exit()
all attached shared memory segments are detached (not destroyed).
.PP
.SH "RETURN VALUE"
0 is returned on success, -1 on error.
.SH ERRORS
.TP 0.8i
.B EACCESS
is returned if \fBIPC_STAT\fP is requested and
\fIshm_perm.modes\fP does not allow read access.
.TP
.B EFAULT
is returned if \fIbuf\fP is not accessible.
.TP
.B EINVAL
is returned if \fIshmid\fP is not a valid identifier, or \fIcmd\fP
is not a valid command.
.TP
.B EIDRM
is returned if \fIshmid\fP points to a removed identifier.
.TP
.B EPERM
is returned if \fBIPC_SET\fP or \fBIPC_RMID\fP is attempted, and the
user is not the creator, the owner, or the super-user, and the user
does not have permission granted to their group or to the world.
.SH SEE ALSO
.BR shmget "(2), " shmop (2)
