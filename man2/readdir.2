.\" Copyright 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 June 1995 by Andries Brouwer (aeb@cwi.nl)
.TH READDIR 2  "11 June 1995" "Linux 1.2.9" "Linux Programmer's Manual"
.SH NAME
readdir \- read a directory system call
.SH SYNOPSIS
.nf
.B #include <unistd.h>
.sp
.B #include <linux/dirent.h>
.sp
.B #include <linux/unistd.h>
.sp
.B _syscall3(int, readdir, uint, fd, struct dirent *, dirp, uint, count);
.sp
.BI "int readdir(unsigned int " fd ", struct dirent *" dirp ", unsigned int " count );
.fi
.SH DESCRIPTION
This is not the function you are interested in. Look at
.BR readdir (3)
for the POSIX conforming C library interface. This page only documents the bare
kernel system call interface. Probably it will change.

The \fBreaddir()\fP function reads some dirent structures from the
directory pointed at by \fIfd\fP, into the memory area pointed to by \fIdirp\fP.
For all filesystems except ext2, the parameter \fIcount\fP is ignored, and
at most one dirent structure is read. The same is true for the ext2 filesystem,
in case \fIcount\fP equals 1. However, if \fIfd\fP points at a file on an ext2
file system, and \fIcount\fP is different from 1, then \fIcount\fP gives
the length of the area pointed to by \fIdirp\fP (in bytes), and zero or more
dirent structures are read.
.SH "RETURN VALUE"
The \fBreaddir()\fP function returns the total length of the dirent structure(s)
read if all went well, and \-1 on error.
In the latter case \fIerrno\fP is set.
Note that a zero return occurs both when there are no more directory entries,
and when count indicates that there is no room for the first entry.
.SH "ERRORS"
.TP
.B EBADF
Invalid file descriptor \fIfd\fP.
.TP
.B ENOTDIR
File descriptor does not refer to a directory.
.SH "CONFORMING TO"
This system call is Linux specific.
.SH "SEE ALSO"
.BR readdir (3)

